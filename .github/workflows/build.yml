name: Build All Platforms
run-name: "Build All Platforms: ${{ github.actor }}"
on:
  push:
    tags:
      - "v*"
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  Build-Desktop:
    strategy:
      matrix:
        include:
        - os: windows
          make_cmd: wrebuild
          suffix: zip
          zlib: wzlib
          name: win
        - os: macos
          make_cmd: xrebuild
          suffix: tgz
          zlib: zlib
          name: mac
        - os: ubuntu
          make_cmd: brebuild
          suffix: tgz
          zlib: zlib
          name: linux
    runs-on: ${{ matrix.os }}-latest
    environment: prod
    steps:
      - run: pip install --upgrade cppclean
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Initialize subdirectories
        run: make init
      - name: Initialize subdirectories
        run: make ${{ matrix.zlib }}
      - name: Configure CMake
        run: make CMAKE_BUILD_TYPE=Release ${{ matrix.make_cmd}}
        # Add macOS-specific steps
      - name: Decode and import certificate
        if: matrix.os == 'macos'
        env:
          P12_BASE64: ${{ secrets.MACOS_CERTIFICATE_P12 }}
          P12_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
        run: |
          echo "$P12_BASE64" | base64 --decode > certificate.p12
          security create-keychain -p "" build.keychain
          security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
          security unlock-keychain -p "" build.keychain

      - name: Sign app bundle
        if: matrix.os == 'macos'
        run: codesign --deep --force --verify --verbose --sign "Kevin Blanchard Dev" build/BbAdventures.app

      - name: Verify code signing
        if: matrix.os == 'macos'
        run: codesign --verify --deep --strict --verbose=2 build/BbAdventures.app

      - name: Save packaged artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-artifacts
          path: build/BbAdventures.${{ matrix.suffix }}
  # Use container as for some reason has permissions issues on a regular runner when I install emscripten.
  Build-Emscripten:
    runs-on: ubuntu-latest
    environment: prod
    container:
      image: emscripten/emsdk:3.1.46
      env:
        THING_ADD: <div><br>Use WASD to move<br>Space to interact<br>Or, use a controller!<br>Built with github actions!</div>
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: repo
          submodules: recursive
      - name: Install CMake
        run: |
          apt update -y && apt upgrade -y
          # This is needed as system freetype doesn't have proper files for find package.
          embuilder build sdl2 freetype ogg libpng vorbis
          # apt install cmake pkg-config libfreetype-dev -y
          apt install cmake pkg-config  -y
          # cp /usr/lib/x86_64-linux-gnu/pkgconfig/freetype2.pc /usr/lib/x86_64-linux-gnu/pkgconfig/freetype.pc
          # export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig/
      - name: Actual build
        run: cd repo && make init && make CMAKE_BUILD_TYPE=Release erebuild
      - name: Update html build
        run: cd repo/build/bin && awk '/<textarea id="output" rows="8"><\/textarea>/ {print; print ENVIRON["THING_ADD"]; next} 1' BbAdventures.html > temp.html && mv temp.html BbAdventures.html
      - uses: actions/upload-artifact@v4
        name: Upload to S3
        with:
          name: s3Artifact
          path: repo/build/bin
  Push-Files-To-S3:
    uses: supergoongaming/sharedWorkflows/.github/workflows/push_to_s3.yml@master
    needs: Build-Emscripten
    secrets:
      IAM_SECRET: ${{ secrets.IAM_SECRET }}
    with:
      IAM_USER: ${{ vars.IAM_USER }}
      bucket_region: "us-east-1"
      bucket_name: "bba-external-site"
  Create-Release:
    strategy:
        matrix:
          include:
          - os: win
            artifact_name: BbAdventures.zip
            asset_name: supergoon_win.zip
          - os: mac
            artifact_name: BbAdventures.tgz
            asset_name: supergoon_mac.tgz
          - os: linux
            artifact_name: BbAdventures.tgz
            asset_name: supergoon_ubuntu.tgz
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: prod
    needs:
    - Build-Desktop
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Fetch tags
        run: git fetch --tags --force
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
      - name: Get current tag annotation
        id: tag-data
        uses: ericcornelissen/git-tag-annotation-action@v2

      - name: Upload binaries to release
        env:
          ANNOTATION: ${{ steps.tag-data.outputs.git-tag-annotation }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
          body: ${{ steps.tag-data.outputs.git-tag-annotation }}
